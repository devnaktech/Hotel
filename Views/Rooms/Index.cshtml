@* @model IEnumerable<Midterm.Models.Room> *@

@* @{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
} *@

@* <h1>Index</h1>
<div class="d-flex justify-content-between p-3">
    <h3>Rooms</h3>

    <button asp-action="Create" type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        Add Room
    </button>
</div>

<div class="card">
    <div class="card-body p-2 rounded-4">
        <table class="table rounded-4">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsHidden)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomType)
                    </th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoomName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsHidden)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoomType.RoomTypeName)
                        </td>

                        <td>
                            <div class="dropdown rounded-4">
                                <button class="btn" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-ellipsis-h"></i>
                                </button>

                                <ul class="dropdown-menu rounded-4">
                                    <li>
                                        <a asp-action="Details" asp-route-id="@item.RoomId" class="dropdown-item text-secondary">
                                            <i class="fas fa-info-circle mr-2"></i>
                                            Details
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-action="Edit" asp-route-id="@item.RoomId" class="dropdown-item text-warning">
                                            <i class="fas fa-pen mr-2"></i>
                                            Edit
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-action="Delete" asp-route-id="@item.RoomId" class="dropdown-item text-danger">
                                            <i class="fas fa-trash mr-2"></i>
                                            Delete
                                        </a>
                                    </li>
                                </ul>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fs-5" id="staticBackdropLabel">
                    Add Room
                </h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body pt-0">
                <partial name="Create" model='new Midterm.Models.Room { RoomName = "", IsHidden = false, RoomTypeId = 4 }' />
            </div>
        </div>
    </div>
</div> *@




@* @model IEnumerable<Midterm.Models.Room>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-5">
    <!-- Header -->
    <div class="text-center mb-4">
        <h1 class="display-5 fw-bold text-gradient">Rooms</h1>
        <hr class="subtitle-line mx-auto" />
    </div>

    <!-- Header Actions -->
    <div class="d-flex justify-content-between align-items-center mb-4 p-3">
        <h3 class="mb-0">Rooms</h3>
        <button asp-action="Create" type="button" class="btn btn-gradient btn-add-room" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
            Add Room
        </button>
    </div>

    <!-- Main Card -->
    <div class="room-card p-3">
        <div class="card-body p-2 rounded-4">
            <table class="table table-elegant rounded-4">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.RoomName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsHidden)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RoomType)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomName)
                            </td>
                            <td>
                                <span class="status-indicator @(item.IsHidden ? "hidden" : "visible")">
                                    @Html.DisplayFor(modelItem => item.IsHidden)
                                </span>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomType.RoomTypeName)
                            </td>
                            <td>
                                <div class="dropdown rounded-4">
                                    <button class="btn btn-dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>
                                    <ul class="dropdown-menu rounded-4">
                                        <li>
                                            <a asp-action="Details" asp-route-id="@item.RoomId" class="dropdown-item text-info">
                                                <i class="fas fa-info-circle mr-2"></i> Details
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-action="Edit" asp-route-id="@item.RoomId" class="dropdown-item text-warning">
                                                <i class="fas fa-pen mr-2"></i> Edit
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-action="Delete" asp-route-id="@item.RoomId" class="dropdown-item text-danger">
                                                <i class="fas fa-trash mr-2"></i> Delete
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title fs-5" id="staticBackdropLabel">Add Room</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body pt-0">
                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger text-center mb-2"></div>

                        <div class="mb-2">
                            <label asp-for="FirstOrDefault().RoomName" class="form-label label-style"></label>
                            <input asp-for="FirstOrDefault().RoomName" class="form-control input-style" placeholder="Enter room name" />
                            <span asp-validation-for="FirstOrDefault().RoomName" class="text-danger"></span>
                        </div>

                        <div class="mb-2 form-check">
                            <label class="form-check-label label-style">
                                <input class="form-check-input" asp-for="FirstOrDefault().IsHidden" /> @Html.DisplayNameFor(model => model.FirstOrDefault().IsHidden)
                            </label>
                        </div>

                        <div class="mb-3">
                            <label asp-for="FirstOrDefault().RoomTypeId" class="form-label label-style"></label>
                            <select asp-for="FirstOrDefault().RoomTypeId" class="form-control input-style" asp-items="ViewBag.RoomTypeId"></select>
                            <span asp-validation-for="FirstOrDefault().RoomTypeId" class="text-danger"></span>
                        </div>

                        <!-- Actions -->
                        <div class="d-flex justify-content-center mt-3">
                            <input type="submit" value="Create" class="btn btn-create me-2" />
                            <button type="button" class="btn btn-outline-back" data-bs-dismiss="modal">Back</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Gradient Text */
    .text-gradient {
        background: linear-gradient(90deg, #2c3e50, #3498db);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    /* Subtitle Line */
    .subtitle-line {
        width: 50px;
        height: 2px;
        background: #3498db;
        border: none;
        margin-top: 5px;
    }

    /* Room Card Styling */
    .room-card {
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        padding: 1rem;
    }

    /* Table Styling */
    .table-elegant {
        border-collapse: separate;
        border-spacing: 0 5px;
    }

    .table-elegant th {
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        padding: 0.75rem 1rem;
        border: none;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .table-elegant td {
        background: rgba(255, 255, 255, 0.9);
        padding: 0.75rem 1rem;
        border: none;
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
        vertical-align: middle;
    }

    /* Status Indicator */
    .status-indicator {
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        display: inline-block;
    }

    .status-indicator.hidden { background: #e74c3c; color: white; }
    .status-indicator.visible { background: #2ecc71; color: white; }

    /* Button Styling */
    .btn-gradient {
        background: linear-gradient(45deg, #3498db, #2c3e80);
        color: white;
        border: none;
        padding: 0.5rem 1.25rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-gradient:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
    }

    .btn-add-room {
        background: linear-gradient(45deg, #3498db, #2c3e80);
    }

    .btn-add-room:hover {
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
    }

    .btn-dropdown {
        background: #f8f9fa;
        color: #2c3e50;
        border: none;
        padding: 0.25rem 0.5rem;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .btn-dropdown:hover {
        background: #e9ecef;
    }

    .dropdown-menu {
        min-width: 120px;
        border: none;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .dropdown-item {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .dropdown-item:hover {
        background: #f8f9fa;
    }

    /* Modal Form Styling */
    .modal-lg {
        max-width: 800px; /* Full-width modal */
    }

    .modal-content {
        border-radius: 15px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        border-bottom: none;
        padding: 1rem 1.5rem;
    }

    .modal-body {
        padding: 1rem 1.5rem;
    }

    /* Form Input and Select Styling */
    .input-style {
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
        background-color: #f9fafb;
        width: 100%;
    }

    .input-style:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 2px rgba(40, 167, 69, 0.1);
        outline: none;
    }

    /* Label Styling */
    .label-style {
        font-size: 0.85rem;
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 0.25rem;
    }

    /* Form Check Styling */
    .form-check-input {
        margin-top: 0.2rem;
    }

    /* Modal Button Styling */
    .btn-create {
        background: #28a745;
        color: white;
        border: none;
        padding: 0.5rem 1.5rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-create:hover {
        background: #218838;
        box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
        transform: translateY(-1px);
    }

    .btn-outline-back {
        border: 2px solid #2c3e50;
        color: #2c3e50;
        background: white;
        padding: 0.5rem 1.5rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-outline-back:hover {
        background: #2c3e50;
        color: white;
    }

    /* Custom Spacing */
    .py-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
    }

    .mb-2 {
        margin-bottom: 0.5rem !important;
    }

    .mb-3 {
        margin-bottom: 1rem !important;
    }

    .mb-4 {
        margin-bottom: 1.5rem !important;
    }

    .mt-3 {
        margin-top: 1rem !important;
    }

    .me-2 {
        margin-right: 0.5rem !important;
    }

    .text-center {
        text-align: center;
    }

    .text-danger {
        color: #ef4444 !important;
    }
</style> *@





@model IEnumerable<Midterm.Models.Room>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-5">
    <!-- Header -->
    <div class="text-center mb-4">
        <h1 class="display-5 fw-bold text-gradient">Rooms</h1>
        <hr class="subtitle-line mx-auto" />
    </div>

    <!-- Header Actions -->
    <div class="d-flex justify-content-between align-items-center mb-4 p-3">
        <h3 class="mb-0"></h3>
        <a asp-action="Create" ​​ class="btn btn-gradient btn-add-room"​​>Create New</a>
    </div>

    <!-- Main Card -->
    <div class="room-card p-3">
        <div class="card-body p-2 rounded-4">
            <table class="table table-elegant rounded-4">
                <thead>
                    <tr>
                        <th class="first-column">
                            @Html.DisplayNameFor(model => model.RoomName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsHidden)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RoomType)
                        </th>
                        <th class="last-column"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomName)
                            </td>
                            <td>
                                <span class="status-indicator @(item.IsHidden ? "hidden" : "visible")">
                                    @Html.DisplayFor(modelItem => item.IsHidden)
                                </span>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomType.RoomTypeName)
                            </td>
                            <td>
                                <div class="dropdown rounded-4">
                                    <button class="btn btn-dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>
                                    <ul class="dropdown-menu rounded-4">
                                        <li>
                                            <a asp-action="Details" asp-route-id="@item.RoomId" class="dropdown-item text-info">
                                                <i class="fas fa-info-circle mr-2"></i> Details
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-action="Edit" asp-route-id="@item.RoomId" class="dropdown-item text-warning">
                                                <i class="fas fa-pen mr-2"></i> Edit
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-action="Delete" asp-route-id="@item.RoomId" class="dropdown-item text-danger">
                                                <i class="fas fa-trash mr-2"></i> Delete
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    @* <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title fs-5" id="staticBackdropLabel">Add Room</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body pt-0">
                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger text-center mb-2"></div>

                        <div class="mb-2">
                            <label asp-for="FirstOrDefault().RoomName" class="form-label label-style"></label>
                            <input asp-for="FirstOrDefault().RoomName" class="form-control input-style" placeholder="Enter room name" />
                            <span asp-validation-for="FirstOrDefault().RoomName" class="text-danger"></span>
                        </div>

                        <div class="mb-2 form-check">
                            <label class="form-check-label label-style">
                                <input class="form-check-input" asp-for="FirstOrDefault().IsHidden" /> @Html.DisplayNameFor(model => model.FirstOrDefault().IsHidden)
                            </label>
                        </div>

                        <div class="mb-3">
                            <label asp-for="FirstOrDefault().RoomTypeId" class="form-label label-style"></label>
                            <select asp-for="FirstOrDefault().RoomTypeId" class="form-control input-style" asp-items="ViewBag.RoomTypeId"></select>
                            <span asp-validation-for="FirstOrDefault().RoomTypeId" class="text-danger"></span>
                        </div>

                        <!-- Actions -->
                        <div class="d-flex justify-content-center mt-3">
                            <input type="submit" value="Create" class="btn btn-create me-2" />
                            <button type="button" class="btn btn-outline-back" data-bs-dismiss="modal">Back</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div> *@

<style>
    /* Gradient Text */
    .text-gradient {
        background: linear-gradient(90deg, #2c3e50, #3498db);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    /* Subtitle Line */
    .subtitle-line {
        width: 50px;
        height: 2px;
        background: #3498db;
        border: none;
        margin-top: 5px;
    }

    /* Room Card Styling */
    .room-card {
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        padding: 1rem;
    }

    /* Table Styling */
    .table-elegant {
        border-collapse: separate;
        border-spacing: 0 5px;
        width: 100%; /* Ensure full width */
    }

    .table-elegant th {
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        padding: 0.75rem 1rem;
        border: none;
    }

    .table-elegant th.first-column {
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .table-elegant th.last-column {
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
    }

    .table-elegant td {
        background: rgba(255, 255, 255, 0.9);
        padding: 0.75rem 1rem;
        border: none;
        vertical-align: middle;
    }

    /* Status Indicator */
    .status-indicator {
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        display: inline-block;
    }

    .status-indicator.hidden { background: #e74c3c; color: white; }
    .status-indicator.visible { background: #2ecc71; color: white; }

    /* Button Styling */
    .btn-gradient {
        background: linear-gradient(45deg, #3498db, #2c3e80);
        color: white;
        border: none;
        padding: 0.5rem 1.25rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-gradient:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
    }

    .btn-add-room {
        background: linear-gradient(45deg, #3498db, #2c3e80);
    }

    .btn-add-room:hover {
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
    }

    .btn-dropdown {
        background: #f8f9fa;
        color: #2c3e50;
        border: none;
        padding: 0.25rem 0.5rem;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .btn-dropdown:hover {
        background: #e9ecef;
    }

    .dropdown-menu {
        min-width: 120px;
        border: none;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .dropdown-item {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .dropdown-item:hover {
        background: #f8f9fa;
    }

    /* Modal Form Styling */
    .modal-lg {
        max-width: 800px;
    }

    .modal-content {
        border-radius: 15px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        border-bottom: none;
        padding: 1rem 1.5rem;
    }

    .modal-body {
        padding: 1rem 1.5rem;
    }

    /* Form Input and Select Styling */
    .input-style {
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
        background-color: #f9fafb;
        width: 100%;
    }

    .input-style:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 2px rgba(40, 167, 69, 0.1);
        outline: none;
    }

    /* Label Styling */
    .label-style {
        font-size: 0.85rem;
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 0.25rem;
    }

    /* Form Check Styling */
    .form-check-input {
        margin-top: 0.2rem;
    }

    /* Modal Button Styling */
    .btn-create {
        background: #28a745;
        color: white;
        border: none;
        padding: 0.5rem 1.5rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-create:hover {
        background: #218838;
        box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
        transform: translateY(-1px);
    }

    .btn-outline-back {
        border: 2px solid #2c3e50;
        color: #2c3e50;
        background: white;
        padding: 0.5rem 1.5rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-outline-back:hover {
        background: #2c3e50;
        color: white;
    }

    /* Custom Spacing */
    .py-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
    }

    .mb-2 {
        margin-bottom: 0.5rem !important;
    }

    .mb-3 {
        margin-bottom: 1rem !important;
    }

    .mb-4 {
        margin-bottom: 1.5rem !important;
    }

    .mt-3 {
        margin-top: 1rem !important;
    }

    .me-2 {
        margin-right: 0.5rem !important;
    }

    .text-center {
        text-align: center;
    }

    .text-danger {
        color: #ef4444 !important;
    }
</style>

     @*  @model IEnumerable<Midterm.Models.Room>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Include Bootstrap and Bootstrap Icons CSS -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Header -->
            <div class="text-center mb-5">
                <h1 class="display-4 fw-bold text-gradient">Room Management</h1>
                <div class="subtitle-line mx-auto"></div>
            </div>

            <!-- Create Button -->
            <div class="text-end mb-4">
                <a asp-action="Create" class="btn btn-gradient">
                    <i class="bi bi-plus-circle"></i> Create New Room
                </a>
            </div>

            <!-- Rooms Table -->
            <div class="table-responsive">
                <table class="table table-elegant table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.RoomName)</th>
                            <th>@Html.DisplayNameFor(model => model.IsHidden)</th>
                            <th>Room Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.RoomName)</td>
                                <td>
                                    <span class="status-indicator @(item.IsHidden ? "hidden" : "visible")">
                                        @(item.IsHidden ? "Hidden" : "Visible")
                                    </span>
                                </td>
                                <td class="highlight">
                                    @if (item.RoomType != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.RoomType.RoomTypeName)
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not assigned</span>
                                    }
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.RoomId" class="btn btn-sm btn-outline-elegant me-2">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.RoomId" class="btn btn-sm btn-outline-info me-2">
                                        <i class="bi bi-info-circle"></i> Details
                                    </a>
                                    <!-- Delete Form -->
                                    <form asp-action="Delete" method="post" asp-route-id="@item.RoomId" onsubmit="return confirm('Are you sure you want to delete the room \"@item.RoomName\"? This action cannot be undone.');">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" asp-for="@item.RoomId" name="RoomId" />
                                        <button type="submit" class="btn btn-sm btn-delete">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom styles for the Index page */
    .text-gradient {
        background: linear-gradient(90deg, #ff6b6b, #f06595);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .subtitle-line {
        width: 100px;
        height: 4px;
        background: linear-gradient(90deg, #ff6b6b, #f06595);
        border-radius: 2px;
        margin-top: 10px;
    }

    .table-elegant {
        border: none;
        background: #fff;
        border-radius: 15px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    }

    .table-elegant thead th {
        font-weight: 600;
        color: #555;
        border: none;
        background: #f8f9fa;
    }

    .table-elegant tbody td {
        color: #333;
        border: none;
        vertical-align: middle;
    }

    .table-elegant tbody tr:hover {
        background: #f8f9fa;
    }

    .status-indicator {
        padding: 5px 10px;
        border-radius: 12px;
        font-size: 0.9rem;
    }

    .status-indicator.visible {
        background: #d4edda;
        color: #155724;
    }

    .status-indicator.hidden {
        background: #f8d7da;
        color: #721c24;
    }

    .highlight {
        font-weight: 500;
        color: #ff6b6b;
    }

    .btn-gradient {
        background: linear-gradient(90deg, #ff6b6b, #f06595);
        color: #fff;
        border: none;
        padding: 10px 25px;
        border-radius: 25px;
        transition: background 0.3s ease;
    }

    .btn-gradient:hover {
        background: linear-gradient(90deg, #f06595, #ff6b6b);
    }

    .btn-outline-elegant {
        border: 2px solid #ff6b6b;
        color: #ff6b6b;
        border-radius: 25px;
        transition: all 0.3s ease;
    }

    .btn-outline-elegant:hover {
        background: #ff6b6b;
        color: #fff;
    }

    .btn-outline-info {
        border: 2px solid #17a2b8;
        color: #17a2b8;
        border-radius: 25px;
        transition: all 0.3s ease;
    }

    .btn-outline-info:hover {
        background: #17a2b8;
        color: #fff;
    }

    .btn-delete {
        background: linear-gradient(90deg, #dc3545, #c82333);
        color: #fff;
        border: none;
        border-radius: 25px;
        transition: background 0.3s ease;
    }

    .btn-delete:hover {
        background: linear-gradient(90deg, #c82333, #dc3545);
    }
</style> *@